<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Intellij IDEA 远程调试Tomcat下的应用]]></title>
    <url>%2F2018%2F05%2F30%2F%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%2F%E5%BC%80%E5%8F%91%E8%AF%AD%E8%A8%80%2F%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8%2FIntellij%20IDEA%20%E8%BF%9C%E7%A8%8B%E8%B0%83%E8%AF%95Tomcat%E4%B8%8B%E7%9A%84%E5%BA%94%E7%94%A8%2F</url>
    <content type="text"><![CDATA[在Tomcat的bin目录下找到catalina.bat，搜索JPDA_ADDRESS，即为远程调试监听端口，默认为8000 1set JPDA_ADDRESS = 8000 cd到bin目录下，运行catalina.bat，并开启远程调试功能 1catalina.bat jpda start 在intellij中，新建远程服务器 配置远程服务的ip和端口 配置远程调试监听端口 在intellij中启动即可]]></content>
      <categories>
        <category>学习笔记</category>
        <category>开发语言</category>
        <category>工具使用</category>
      </categories>
      <tags>
        <tag>intellij idea</tag>
        <tag>tomcat</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Web容器默认servlet]]></title>
    <url>%2F2018%2F05%2F30%2F%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%2F%E5%BC%80%E5%8F%91%E8%AF%AD%E8%A8%80%2FJava%2FWeb%E5%AE%B9%E5%99%A8%E9%BB%98%E8%AE%A4servlet%2F</url>
    <content type="text"><![CDATA[默认servlet-name 容器 default Tomcat Jetty JBoss GlassFish _ah_default Google App Engine resin-file Resin FileServlet WebLogic SimpleFileServlet WebSphere 在spring配置文件中开启如下配置，即可开启默认servlet1&lt;mvc:default-servlet-handler/&gt;]]></content>
      <categories>
        <category>学习笔记</category>
        <category>开发语言</category>
        <category>Java</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>web container</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[C#中程序集版本名词解释]]></title>
    <url>%2F2018%2F05%2F30%2F%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%2F%E5%BC%80%E5%8F%91%E8%AF%AD%E8%A8%80%2FC%23%2FC%23%E4%B8%AD%E7%A8%8B%E5%BA%8F%E9%9B%86%E7%89%88%E6%9C%AC%E5%90%8D%E8%AF%8D%E8%A7%A3%E9%87%8A%2F</url>
    <content type="text"><![CDATA[微软内部开发有一个版本号命名规则，格式如下: Major Minor Build Revision 主要版本号 次要版本号 生成号 修订号 eg：2.23.159.23 Major：名称相同但主要版本号不同的程序集不可互换。 更高版本号可能表明大幅重写无法假定向后兼容的产品。 Minor：如果两个程序集的名称和主要版本号相同，而次要版本号不同，这指示显著增强，但照顾到了向后兼容性。 该较高的次要版本号可指示产品的修正版或完全向后兼容的新版本。 Build：生成号的不同表示对相同源所作的重新编译。 处理器、 平台或编译器更改时，可能使用不同的生成号。 Revision：名称、主要版本号和次要版本号都相同但修订号不同的程序集应是完全可互换的。 更高修订号可能在修复以前发布的程序集安全漏洞的版本中使用。 AssemblyVersion（程序集版本） 在.NET Framework中编译和运行时使用的版本号，使用该版本号定位和加载指定程序集。当你在你的项目中引用了指定的程序集，其版本号将会嵌入到你的项目中。在运行时，CLR通过该版本号加载指定程序集。注意，仅当程序集使用强命名时，才会使用程序集名称、公钥、语言信息以及该版本号查找指定程序集，否则只会根据文件名进行查找。 AssemblyFileVersion（文件版本） 在文件系统中给文件的版本号，会在Windows资源管理器中显示。但是，在.NET Framework引用类库时从来不会用到这个版本。]]></content>
      <categories>
        <category>学习笔记</category>
        <category>开发语言</category>
        <category>C#</category>
      </categories>
      <tags>
        <tag>C#</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[C#调用ocx的方法]]></title>
    <url>%2F2018%2F05%2F30%2F%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%2F%E5%BC%80%E5%8F%91%E8%AF%AD%E8%A8%80%2FC%23%2FC%23%E8%B0%83%E7%94%A8ocx%E7%9A%84%E6%96%B9%E6%B3%95%2F</url>
    <content type="text"><![CDATA[一、Winform工程中调用ocx 在项目中添加对ocx的引用 将ocx文件拖拽至工具箱 将ocx控件从工具箱中拖拽到窗体上 二、类库工程中调用ocx 编译ocx文件 打开Visual Studio命令提示符 输入命令aximp xxx.ocx，生成两个dll文件 将两个dll文件放到项目路径下 在项目中添加引用，引用Ax开头的dll 调用ocx控件的方法 #123Ocx ocx = new Ocx();ocx.CreateControl();ocx.method();]]></content>
      <categories>
        <category>学习笔记</category>
        <category>开发语言</category>
        <category>C#</category>
      </categories>
      <tags>
        <tag>C#</tag>
        <tag>ocx</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[WebSphere下忘记控制台密码]]></title>
    <url>%2F2018%2F05%2F30%2F%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%2F%E9%83%A8%E7%BD%B2%E7%9B%B8%E5%85%B3%2FWebSphere%2FWebSphere%E4%B8%8B%E5%BF%98%E8%AE%B0%E6%8E%A7%E5%88%B6%E5%8F%B0%E5%AF%86%E7%A0%81%2F</url>
    <content type="text"><![CDATA[取消控制台认证在was node的安装目录下，查找安全文件security.xml1$WAS_Profile_HOME\config\cells 在xml中，查找第一个enabled属性，将其修改为false，再重新启动即可]]></content>
      <tags>
        <tag>websphere</tag>
        <tag>was</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[WebSphere下配置servlet可访问WEB-INF]]></title>
    <url>%2F2018%2F05%2F30%2F%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%2F%E9%83%A8%E7%BD%B2%E7%9B%B8%E5%85%B3%2FWebSphere%2FWebSphere%E4%B8%8B%E9%85%8D%E7%BD%AEservlet%E5%8F%AF%E8%AE%BF%E9%97%AEWEB-INF%2F</url>
    <content type="text"><![CDATA[WebSphere的WebContainer配置项说明 WebSphere的WebContainer配置项中： Attributename Data type Default value Description exposeWebInfOnDispatch boolean false If true, a servlet can access files in the WEB-INF directory. If false (default), a servlet cannot access files the WEB-INF directory. exposeWebInfOnDispatch属性默认值为false，servlet不能访问WEB-INF目录。 按照下图配置，可访问WEB-INF目录]]></content>
      <categories>
        <category>学习笔记</category>
        <category>部署相关</category>
        <category>WebSphere</category>
      </categories>
      <tags>
        <tag>websphere</tag>
        <tag>was</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[MySQL在Windows环境下安装]]></title>
    <url>%2F2018%2F05%2F30%2F%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%2F%E9%83%A8%E7%BD%B2%E7%9B%B8%E5%85%B3%2FMySQL%2FMySQL%E5%9C%A8Windows%E7%8E%AF%E5%A2%83%E4%B8%8B%E5%AE%89%E8%A3%85%2F</url>
    <content type="text"><![CDATA[MySQL官网下载安装包 https://www.mysql.com/cn/downloads/ 解压到本地目录 新建my.ini cd到bin目录下 初始化数据，执行 mysqld –initialize（mysqld –initialize-insecure –user=mysql;据说执行这句话可以免密陆） 注册windows服务，mysqld –install MySQL –defaultsfile=”d:\DataBase\MySql\mysql-5.7.16-winx64\my.ini” 启动mysql服务 net start mysql 登陆mysql，mysql -u root -p 提示输入密码，初始无密码，直接回车 切换数据库，use mysql 修改密码，update user set password = password(‘newpsw’) where user = ‘roo’; 刷新权限表，flush privileges; 修改主机名，允许所有ip连接，update user set hosts = ‘%’ where user = ‘root’; exit退出mysql 如需关闭服务，net stop mysql 注意： 5.7版本之后，初始化数据后，会自动分配一个密码，密码可在一个.err文件中查看日志获取 在my.ini中配置一项可以不使用密码登陆，在[mysqld]下输入skip-grant-tables 12345678910my.ini[mysql]default-character-set=utf8[mysqld]basedir =d:\DataBase\MySql\mysql-5.7.16-winx64datadir =d:\DataBase\MySql\mysql-5.7.16-winx64\dataport =3306character-set-server=utf8[client]default-character-set=utf8]]></content>
      <categories>
        <category>学习笔记</category>
        <category>部署相关</category>
        <category>MySQL</category>
      </categories>
      <tags>
        <tag>mysql</tag>
        <tag>windows</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[MySQL官方Docker镜像使用]]></title>
    <url>%2F2018%2F05%2F30%2F%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%2F%E9%83%A8%E7%BD%B2%E7%9B%B8%E5%85%B3%2FDocker%2FMySQL%E5%AE%98%E6%96%B9Docker%E9%95%9C%E5%83%8F%E4%BD%BF%E7%94%A8%2F</url>
    <content type="text"><![CDATA[启动mysql服务实例 拉取镜像12docker pull mysqldocker pull mysql:5.7 启动实例1docker run --name mysql -p 3306:3306 -e MYSQL_ROOT_PASSWORD=password -d mysql:5.7 测试mysql服务实例 安装mysql客户端1apt-get install mysql-client-core-5.7 登录mysql1mysql -h127.0.0.1 -P3306 -uroot -ppassword 使用自定义MySQL配置文件 默认情况下，MySQL的启动配置文件是/etc/mysql/my.cnf，引用了/etc/mysql/conf.d和/etc/mysql/mysql.conf.d文件夹想要使用自定义配置文件，可将配置文件挂载到mysql容器的/etc/mysql/conf.d和/etc/mysql/mysql.conf.d目录下 title1docker run --name mysql -p 3307:3306 -v /mnt/share/custom.cnf:/etc/mysql/conf.d/custom.cnf -e MYSQL_ROOT_PASSWORD=password -d mysql:5.7 使用自定义MySQL配置 也可以使用命令行参数来指定配置 1docker run --name mysql -p 3307:3306 -v /mnt/share/custom.cnf:/etc/mysql/conf.d/custom.cnf -e MYSQL_ROOT_PASSWORD=password -d mysql:5.7 --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --lower_case_table_names=1 可以通过以下命令，查看可配参数1docker run -it --rm mysql:tag --verbose --hel]]></content>
      <categories>
        <category>学习笔记</category>
        <category>部署相关</category>
        <category>Docker</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>ubuntu</tag>
        <tag>docker</tag>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Docker中国官方镜像加速]]></title>
    <url>%2F2018%2F05%2F30%2F%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%2F%E9%83%A8%E7%BD%B2%E7%9B%B8%E5%85%B3%2FDocker%2FDocker%E4%B8%AD%E5%9B%BD%E5%AE%98%E6%96%B9%E9%95%9C%E5%83%8F%E5%8A%A0%E9%80%9F%2F</url>
    <content type="text"><![CDATA[Docker中国官方镜像加速 编辑配置文件，配置镜像地址12345vi /etc/docker/daemon.json&#123; &quot;registry-mirrors&quot;: [&quot;https://registry.docker-cn.com&quot;]&#125;]]></content>
      <categories>
        <category>学习笔记</category>
        <category>部署相关</category>
        <category>Docker</category>
      </categories>
      <tags>
        <tag>docker</tag>
        <tag>docker hub</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Linux下war包操作]]></title>
    <url>%2F2018%2F05%2F29%2F%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%2FLinux%2F%E9%80%9A%E7%94%A8%2FLinux%E4%B8%8Bwar%E5%8C%85%E6%93%8D%E4%BD%9C%2F</url>
    <content type="text"><![CDATA[Unzip 1unzip -oq common.war -d common jar 1jar -xvf game.war]]></content>
      <categories>
        <category>学习笔记</category>
        <category>Linux</category>
        <category>通用</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>war</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Linux下端口进程互查]]></title>
    <url>%2F2018%2F05%2F29%2F%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%2FLinux%2F%E9%80%9A%E7%94%A8%2FLinux%E4%B8%8B%E7%AB%AF%E5%8F%A3%E8%BF%9B%E7%A8%8B%E4%BA%92%E6%9F%A5%2F</url>
    <content type="text"><![CDATA[先查看进程pid 1ps -ef |grep 进程名 通过pid查看占用端口 1netstat -nap |grep 进程id 通过端口查看进程 1netstat -nap |grep 端口号]]></content>
      <categories>
        <category>学习笔记</category>
        <category>Linux</category>
        <category>通用</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[虚拟机Virtual Box环境下Ubuntu初始化配置网卡]]></title>
    <url>%2F2018%2F05%2F29%2F%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%2FLinux%2FUbuntu%2F%E8%99%9A%E6%8B%9F%E6%9C%BAVirtual%20Box%E7%8E%AF%E5%A2%83%E4%B8%8BUbuntu%E5%88%9D%E5%A7%8B%E5%8C%96%E9%85%8D%E7%BD%AE%E7%BD%91%E5%8D%A1%2F</url>
    <content type="text"><![CDATA[配置网卡为桥接模式 配置虚拟机ip、网关与宿主机在同一网段 断开再连接 完成！]]></content>
      <categories>
        <category>学习笔记</category>
        <category>Linux</category>
        <category>Ubuntu</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>ubuntu</tag>
        <tag>virtualbox</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[虚拟机Virtual Box环境下Ubuntu初始化配置共享文件夹]]></title>
    <url>%2F2018%2F05%2F29%2F%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%2FLinux%2FUbuntu%2F%E8%99%9A%E6%8B%9F%E6%9C%BAVirtual%20Box%E7%8E%AF%E5%A2%83%E4%B8%8BUbuntu%E5%88%9D%E5%A7%8B%E5%8C%96%E9%85%8D%E7%BD%AE%E5%85%B1%E4%BA%AB%E6%96%87%E4%BB%B6%E5%A4%B9%2F</url>
    <content type="text"><![CDATA[虚拟机安装增强功能 宿主机任意位置创建一个文件夹，用于宿主机与虚拟机交换文件 创建共享文件夹，选择在步骤2中创建的文件夹路径 虚拟机mnt文件夹下创建一个文件夹，用于虚拟机与宿主机交换文件 12cd /mntmkdir share 建立共享文件夹映射 12cd /mntsudo mount -t vboxsf ShareSwap share]]></content>
      <categories>
        <category>学习笔记</category>
        <category>Linux</category>
        <category>Ubuntu</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>ubuntu</tag>
        <tag>virtualbox</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Ubuntu离线安装软件包]]></title>
    <url>%2F2018%2F05%2F29%2F%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%2FLinux%2FUbuntu%2FUbuntu%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85%E8%BD%AF%E4%BB%B6%E5%8C%85%2F</url>
    <content type="text"><![CDATA[Ubuntu软件包格式为deb 离线安装命令1sudo dpkg -i xxx.deb PS:使用apt-get命令安装软件时，所有下载的deb包都缓存导了/var/cache/apt/archives目录下]]></content>
      <categories>
        <category>学习笔记</category>
        <category>Linux</category>
        <category>Ubuntu</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>ubuntu</tag>
        <tag>deb</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Ubuntu开启SSH服务]]></title>
    <url>%2F2018%2F05%2F29%2F%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%2FLinux%2FUbuntu%2FUbuntu%E5%BC%80%E5%90%AFSSH%E6%9C%8D%E5%8A%A1%2F</url>
    <content type="text"><![CDATA[安装ssh服务 1apt-get install openssh-server 开启ssh服务 1service ssh start ssh配置文件 1vi /etc/ssh/sshd_config]]></content>
      <categories>
        <category>学习笔记</category>
        <category>Linux</category>
        <category>Ubuntu</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>ubuntu</tag>
        <tag>ssh</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[CentOS防火墙使用]]></title>
    <url>%2F2018%2F05%2F29%2F%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%2FLinux%2FCentOS%2FCentOS%E9%98%B2%E7%81%AB%E5%A2%99%E4%BD%BF%E7%94%A8%2F</url>
    <content type="text"><![CDATA[启动防火墙 查看防火墙是否启动1systemctl status firewalld 如果没有启动，启动1systemctl start firewalld 开放端口命令 12firewall-cmd --zone=public --add-port=1. 1. /tcp --permanentsystemctl restart firewalld 关闭端口命令 12firewall-cmd --zone=public --remove-port=1. 1. /tcp -permanentsystemctl restart firewalld 查看开放端口命令 1firewall-cmd --zone=public --list-ports]]></content>
      <categories>
        <category>学习笔记</category>
        <category>Linux</category>
        <category>CentOS</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>centos</tag>
        <tag>firewall</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[虚拟机VMware环境下CentOS初始化配置网卡]]></title>
    <url>%2F2018%2F05%2F29%2F%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%2FLinux%2FCentOS%2F%E8%99%9A%E6%8B%9F%E6%9C%BAVMware%E7%8E%AF%E5%A2%83%E4%B8%8BCentOS%E5%88%9D%E5%A7%8B%E5%8C%96%E9%85%8D%E7%BD%AE%E7%BD%91%E5%8D%A1%2F</url>
    <content type="text"><![CDATA[检测网卡 1ipconfig 发现只有ens33和lo两个网卡，需要将ens33修改为eth0 修改网卡名称，将其中得NAME和DEVICE项修改为 eth01vi /etc/sysconfig/network-scripts/ifcfg-ens33 修改配置文件名称 1mv /etc/sysconfig/network-scripts/ifcfg-ens33 /etc/sysconfig/network-scripts/ifcfg-eth0 编辑/etc/default/grub并加入“net.ifnames=0 biosdevname=0 ”到GRUBCMDLINELINUX变量 123456789vi /etc/default/grubGRUB_TIMEOUT=5GRUB_DISTRIBUTOR=&quot;$(sed &apos;s, release .*$,,g&apos; /etc/system-release)&quot;GRUB_DEFAULT=savedGRUB_DISABLE_SUBMENU=trueGRUB_TERMINAL_OUTPUT=&quot;console&quot;GRUB_CMDLINE_LINUX=&quot;crashkernel=auto net.ifnames=0 biosdevname=0 rhgb quiet&quot;GRUB_DISABLE_RECOVERY=&quot;true&quot; 运行命令grub2-mkconfig -o /boot/grub2/grub.cfg 来重新生成GRUB配置并更新内核参数 1grub2-mkconfig -o /boot/grub2/grub.cfg 重启OS 1reboot 检测网卡以验证 1ifconfig]]></content>
      <categories>
        <category>学习笔记</category>
        <category>Linux</category>
        <category>CentOS</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>centos</tag>
        <tag>vmware</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[CentOS开启SSH服务]]></title>
    <url>%2F2018%2F05%2F29%2F%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%2FLinux%2FCentOS%2FCentOS%E5%BC%80%E5%90%AFSSH%E6%9C%8D%E5%8A%A1%2F</url>
    <content type="text"><![CDATA[安装openssh-server 1yum list installed |grep openssh-server 如果有输出，证明已经安装了openssh-server，如果没有，需要安装1yum install openssh-server 修改sshd服务配置文件 1vi /etc/ssh/sshd_config 开启监听123Port 22ListenAddress 0.0.0.0ListenAddress ::允许远程登录1PermitRootLogin yes使用用户名密码作为连接验证1PasswordAuthentication yes 开启sshd服务 1service sshd start 配置开机自启动 1systemctl enable sshd]]></content>
      <categories>
        <category>学习笔记</category>
        <category>Linux</category>
        <category>CentOS</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>centos</tag>
        <tag>ssh</tag>
      </tags>
  </entry>
</search>
